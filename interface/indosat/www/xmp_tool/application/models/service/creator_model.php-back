<?php

class Creator_model extends CI_Model {

    public $db_xmp,
    $db_table = "operator",
    $db_table2 = "service",
    $db_table3 = "mechanism",
    $db_table4 = "module",
    $db_table5 = "service_operator_mapping",
    $db_table6 = "charging",
    $db_table7 = "custom_handler";

    function __construct() {
        parent::__construct();

        $this->db_xmp = $this->load->database('xmp', TRUE);
    }

    public function getCreatorList($offset, $limit, $search="") {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql_query = "SELECT m.id, m.service_id, m.operator_id, s.name as service, o.name as operator ";
        $sql_query .= "FROM $this->db_table3 as m ";
        $sql_query .= "INNER JOIN " . $this->db_table2 . " as s ON m.service_id = s.id ";
        $sql_query .= "LEFT JOIN " . $this->db_table . " as o ON m.operator_id = o.id ";
        $sql_query .= "WHERE 1=1 ";
        $sql_query .= (!empty($search)) ? "AND (UPPER(s.name) LIKE '%" . $search . "%'
                            OR UPPER(o.name) LIKE '%" . $search . "%') " : "";
        $sql_query .= "AND handler = 'service_creator_handler' ";
        $sql_query .= "AND status = '1' ";
        $sql_query .= "GROUP BY m.service_id, m.operator_id ";
        $sql_limit = (!empty($limit)) ? "LIMIT $offset, $limit " : "";

        write_log("info", __METHOD__ . ", Start Query: " . $sql_query);
        try {
            $query = $this->db_xmp->query($sql_query);
            $total = $query->num_rows();
            $queryData = $this->db_xmp->query($sql_query . $sql_limit);
            $totalData = $queryData->num_rows();

            $result = array(
                'query' => $sql_query . $sql_limit,
                'total' => $total,
                'result' => array(
                    'data' => $queryData->result_array(),
                    'total' => $totalData
                )
            );
            write_log("info", __METHOD__ . ", Query Success ");
        } catch (Exception $e) {
            write_log("info", __METHOD__ . ", Query Failed ");
            $result = array();
        }

        return $result;
    }

    public function getOperatorList($arr = array()) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $operator_id = implode("','", $arr);
        $sql_query = "SELECT a.id, a.name ";
        $sql_query .= "FROM " . $this->db_table . " a ";
        if ($operator_id)
            $sql_query .= "WHERE a.id in ('" . $operator_id . "') ";
//        $sql_query .= "WHERE a.status = '1' ";
//        $sql_query .= (!empty ($group_menu_id)) ? "AND a.id IN (" . $group_menu_id . ") " : "";
        $sql_query .= "ORDER BY a.id ";

        try {
            $query = $this->db_xmp->query($sql_query);
            //$total  = $query->num_rows();
            $result = $query->result_array();
        } catch (Exception $e) {
            $result = array();
        }

        return $result;
    }

    public function getServiceList($params) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $this->db_xmp->select('id, name');
        $this->db_xmp->like('name', $params, 'both');
        $this->db_xmp->group_by('name');
        $query = $this->db_xmp->get('service');
        return $query->result();
    }

    public function getOperatorName($operator_id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $this->db_xmp->select('name');
        $this->db_xmp->where('id', $operator_id);
        $query = $this->db_xmp->get('operator');
        $result = $query->result_array();
        return $result[0];
    }

    public function getMechanismList($operator_id, $service_id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql_query = "SELECT a.id, a.pattern, a.handler, a.operator_id, a.service_id ";
        $sql_query .= "FROM $this->db_table3 a ";
        $sql_query .= "WHERE a.operator_id = '$operator_id' AND a.service_id = '$service_id' ";

        try {
            $queryData = $this->db_xmp->query($sql_query);
            $result = array('data' => $queryData->result_array());
        } catch (Exception $e) {
            $result = array();
        }

        return $result;
    }

    public function getModuleList() {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql_query = "SELECT a.id, a.name, a.description, a.handler, a.status ";
        $sql_query .= "FROM " . $this->db_table4 . " a ";
        $sql_query .= "WHERE a.status != '0' ";
        $sql_query .= "ORDER BY a.id ";

        try {
            $query = $this->db_xmp->query($sql_query);
            $result = $query->result_array();
        } catch (Exception $e) {
            $result = array();
        }

        return $result;
    }
    
    public function getServiceCustomList(){
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql_query = "SELECT a.id, a.name, a.handler, a.status ";
        $sql_query .= "FROM " . $this->db_table7 . " a ";
        $sql_query .= "WHERE a.status != '0' ";
        $sql_query .= "ORDER BY a.id ";

        try {
            $query = $this->db_xmp->query($sql_query);
            $result = $query->result_array();
        } catch (Exception $e) {
            $result = array();
        }

        return $result;
    }

    public function checkTabList($tabData, $service_id, $handler, $operator_id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql = "SELECT id FROM $this->db_table3 WHERE pattern ='$tabData' AND service_id='$service_id' AND operator_id='$operator_id'";
        $query = $this->db_xmp->query($sql);
        write_log("info", __METHOD__ . ", Start Query: " . $sql);
        if ($query->num_rows() > 0) {
            return TRUE;
        }
        else
            return FALSE;
    }

    public function addNewTab($tabData, $operator_id, $service_id, $handler) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql = "INSERT INTO $this->db_table3 (pattern,operator_id,service_id,handler,date_created,date_modified) ";
        $sql .="values('$tabData','$operator_id','$service_id','$handler',NOW(),NOW())";
        $query = $this->db_xmp->query($sql);

        $sql = "SELECT id,pattern,operator_id FROM $this->db_table3 WHERE pattern ='$tabData'";
        $sql .="AND service_id='$service_id' AND handler='$handler' AND operator_id='$operator_id'";
        $query = $this->db_xmp->query($sql);

        if ($query->num_rows() > 0) {
            $result = $query->result_array();
            return $result;
        }
        else
            return NULL;
    }

    public function getChargingList($operator_id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql_query = "SELECT a.id, a.charging_id, a.operator ";
        $sql_query .= "FROM " . $this->db_table6 . " a ";
        $sql_query .= "WHERE a.operator = '$operator_id' ";
        $sql_query .= "ORDER BY a.id ";

        try {
            $query = $this->db_xmp->query($sql_query);
            write_log("info", __METHOD__ . ", Start Query: " . $sql_query);
            $result = array('data' => $query->result_array());
        } catch (Exception $e) {
            $result = array();
        }

        return $result;
    }

    public function checkServiceList($service_name) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql = "SELECT id FROM $this->db_table2 WHERE name = '$service_name'";
        $query = $this->db_xmp->query($sql);
        write_log("info", __METHOD__ . ", Start Query: " . $sql);
        if ($query->num_rows() > 0) {
            return TRUE;
        } else {
            return FALSE;
        }
    }

    public function editCreator($id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql = "select m.service_id,o.id as operator_id,s.name as service_name from mechanism m ";
        $sql .="inner join operator o on m.operator_id=o.id  ";
        $sql .="inner join service s on m.service_id=s.id  ";
        $sql .="where m.handler='service_creator_handler' and m.id='$id' ";

        write_log("info", __METHOD__ . ", Start Query: " . $sql);
        if ($query = $this->db_xmp->query($sql)) {
            write_log("info", __METHOD__ . ", Query Success ");
            return $query->result_array();
        } else {
            write_log("info", __METHOD__ . ", Query Failed ");
            return array();
        }
    }

    public function editCreatorGetData($service_id, $operator_id) {
        $this->db_xmp = $this->load->database('xmp', TRUE);

        $sql = "select m.operator_id,m.service_id,m.pattern,m.id as mecha_id,r.id,r.message,r.charging_id,c.charging_id as charging_name, s.name as service_name,mo.id as module_id, mo.name as module_name,mo.handler as module_handler from mechanism m ";
        $sql .="inner join reply r on m.id=r.mechanism_id ";
        $sql .="inner join service s on m.service_id=s.id ";
        $sql .="inner join module mo on r.module_id=mo.id ";
        $sql .="inner join charging c on r.charging_id=c.id ";
        $sql .="where m.operator_id='$operator_id' and m.service_id='$service_id' ";

        write_log("info", __METHOD__ . ", Start Query: " . $sql);
        if ($query = $this->db_xmp->query($sql)) {
            write_log("info", __METHOD__ . ", Query Success ");
            return $query->result_array();
        } else {
            write_log("info", __METHOD__ . ", Query Failed ");
            return array();
        }
    }

}
